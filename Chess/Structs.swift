//
//  Structs.swift
//  Chess
//
//  Created by Jordan Doczy on 1/6/19.
//  Copyright Â© 2019 Jordan Doczy. All rights reserved.
//

import Foundation

struct Constants {
    static let squares = SquaresArray()
    static let squaresNormalized = SquareArrayNormalized()
    static let ranks = Ranks()
    static var possibleSpaces = [String:Set<Space>]()
    static var pathways = [String:Set<Space>]()
}

struct ArrayModel {
    
    var model: [Piece?] = Array(repeating: nil, count: 64)

    subscript(space: Space) -> Piece? {
        get {
            return model[space.rawValue]
        }
        set(newValue) {
            model[space.rawValue] = newValue
        }
    }
    
    subscript(index: Int) -> Piece? {
        get {
            return model[index]
        }
        set(newValue) {
            model[index] = newValue
        }
    }
}



struct MoveStruct: Hashable, Equatable {
    var from: Space
    var to: Space
    let hashValue: Int
    
    init(from: Space, to: Space) {
        self.from = from
        self.to = to
        hashValue = Int("\(Constants.squares[from].index)\(Constants.squares[to].index)")!
    }
    
    public static func == (lhs: MoveStruct, rhs: MoveStruct) -> Bool {
        return lhs.hashValue == rhs.hashValue
    }
}

struct EnumMap<Enum: CaseIterable & Hashable, Value> {
    private let values: [Enum : Value]
    
    init(resolver: (Enum) -> Value) {
        var values = [Enum : Value]()
        
        for key in Enum.allCases {
            values[key] = resolver(key)
        }
        
        self.values = values
    }
    
    subscript(key: Enum) -> Value {
        return values[key]!
    }
}

struct Ranks {

    let model = EnumMap<Rank, Set<Space>> { type in
        switch type {
        case ._1: return [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1]
        case ._2: return [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2]
        case ._3: return [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3]
        case ._4: return [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4]
        case ._5: return [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5]
        case ._6: return [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6]
        case ._7: return [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7]
        case ._8: return [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8]
        }
    }
    
    subscript(rank: Rank) -> Set<Space> {
        get {
            return model[rank]
        }
    }
}

struct Diagonals {
    
    static let model = EnumMap<Diagonal, Set<Space>> { type in
        switch type {
        case .a1h8: return [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8]
        case .b1h7: return [.b1,.c2,.d3,.e4,.f5,.g6,.h7]
        case .b1a2: return [.b1,.a2]
        case .b8a7: return [.b8,.a7]
        case .b8h2: return [.b8,.c7,.d6,.e5,.f4,.g3,.h2]
        case .c1h6: return [.c1,.d2,.e3,.f4,.g5,.h6]
        case .c1a3: return [.c1,.b2,.a3]
        case .c8a6: return [.c8,.b7,.a6]
        case .c8h3: return [.c8,.d7,.e6,.f5,.g4,.h3]
        case .d1h5: return [.d1,.e2,.f3,.g4,.h5]
        case .d1a4: return [.d1,.c2,.b3,.a4]
        case .d8a5: return [.d8,.c7,.b6,.a5]
        case .d8h4: return [.d8,.e7,.f6,.g5,.h4]
        case .e1h4: return [.e1,.f2,.g3,.h4]
        case .e1a5: return [.e1,.d2,.c3,.b4,.a5]
        case .e8a4: return [.e8,.d7,.c6,.b5,.a4]
        case .e8h5: return [.e8,.f7,.g6,.h5]
        case .f1h3: return [.f1,.g2,.h3]
        case .f1a6: return [.f1,.e2,.d3,.c4,.b5,.a6]
        case .f8a3: return [.f8,.e7,.d6,.c5,.b4,.a3]
        case .f8h6: return [.f8,.g7,.h6]
        case .g1h2: return [.g1,.h2]
        case .g1a7: return [.g1,.f2,.e3,.d4,.c5,.b6,.a7]
        case .g8a2: return [.g8,.f7,.e6,.d5,.c4,.b3,.a2]
        case .g8h7: return [.g8,.h7]
        case .h1a8: return [.h1,.g2,.f3,.e4,.d5,.c6,.b7,.a8]
        }
    }
    
    static func getSpaces(diagonal: Diagonal) -> Set<Space> {
        return model[diagonal]
    }
}

typealias Square = (
    index: Int,
    adjacentSpaces: Set<Space>,
    file: File,
    fileSpaces: Set<Space>,
    rank: Rank,
    rankSpaces: Set<Space>,
    diagonals: Set<Diagonal>,
    diagonalSpaces: Set<Space>,
    knightSpaces: Set<Space>,
    queenSpaces: Set<Space>,
    whiteKingSpaces: Set<Space>,
    blackKingSpaces: Set<Space>,
    rookSpaces: Set<Space>)

struct SquaresArray {

    subscript(space: Space) -> Square {
        get {
            return model[space.rawValue]
        }
    }

    var model: [Square] = [
        (index: 0,
                          adjacentSpaces: [.a2,.b1,.b2],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.a1h8],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8],
                          knightSpaces: [.b3,.c2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 1,
                          adjacentSpaces: [.a1,.a3,.b1,.b2,.b3],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.g8a2, .b1a2],
                          diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.b1],
                          knightSpaces: [.b4,.c1,.c3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 2,
                          adjacentSpaces: [.a2,.a4,.b2,.b3,.b4],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.f8a3, .c1a3],
                          diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.c1,.b2],
                          knightSpaces: [.b5,.b1,.c4,.c2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 3,
                          adjacentSpaces: [.a3,.a5,.b3,.b4,.b5],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.e8a4, .d1a4],
                          diagonalSpaces: [.d1,.c2,.b3,.a4,.e8,.d7,.c6,.b5],
                          knightSpaces: [.b6,.b2,.c5,.c3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 4,
                          adjacentSpaces: [.a4,.a6,.b4,.b5,.b6],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.d8a5, .e1a5],
                          diagonalSpaces: [.e1,.d2,.c3,.b4,.a5,.d8,.c7,.b6],
                          knightSpaces: [.b7,.b3,.c6,.c4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 5,
                          adjacentSpaces: [.a5,.a7,.b5,.b6,.b7],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.c8a6, .f1a6],
                          diagonalSpaces: [.c8,.b7,.a6,.f1,.e2,.d3,.c4,.b5],
                          knightSpaces: [.b8,.b4,.c7,.c5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 6,
                          adjacentSpaces: [.a6,.a8,.b6,.b7,.b8],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.b8a7, .g1a7],
                          diagonalSpaces: [.g1,.f2,.e3,.d4,.c5,.b6,.a7,.b8],
                          knightSpaces: [.b5,.c8,.c6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 7,
                          adjacentSpaces: [.a7,.b7,.b8],
                          file: .a,
                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.h1a8],
                          diagonalSpaces: [.h1,.g2,.f3,.e4,.d5,.c6,.b7,.a8],
                          knightSpaces: [.b6,.c7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 8,
                          adjacentSpaces: [.a1,.a2,.b2,.c1,.c2],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.b1a2, .b1h7],
                          diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.a2],
                          knightSpaces: [.a3,.c3,.d2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 9,
                          adjacentSpaces: [.a1,.a2,.a3,.b1,.b3,.c1,.c2,.c3],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.a1h8, .c1a3],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.c1,.a3],
                          knightSpaces: [.a4,.c4,.d1,.d3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 10,
                          adjacentSpaces: [.a2,.a3,.a4,.b2,.b4,.c2,.c3,.c4],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.g8a2, .d1a4],
                          diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.d1,.c2,.a4],
                          knightSpaces: [.a1,.a5,.c1,.c5,.d2,.d4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 11,
                          adjacentSpaces: [.a3,.a4,.a5,.b3,.b5,.c3,.c4,.c5],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.f8a3, .e1a5],
                          diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.e1,.d2,.c3,.a5],
                          knightSpaces: [.a2,.a6,.c2,.c6,.d3,.d5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 12,
                          adjacentSpaces: [.a4,.a5,.a6,.b4,.b6,.c4,.c5,.c6],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.e8a4, .f1a6],
                          diagonalSpaces: [.e8,.d7,.c6,.b5,.a4,.f1,.e2,.d3,.c4,.a6],
                          knightSpaces: [.a3,.a7,.c3,.c7,.d4,.d6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 13,
                          adjacentSpaces: [.a5,.a6,.a7,.b5,.b7,.c5,.c6,.c7],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.d8a5, .g1a7],
                          diagonalSpaces: [.d8,.c7,.b6,.a5,.g1,.f2,.e3,.d4,.c5,.a7],
                          knightSpaces: [.a4,.a8,.c4,.c8,.d5,.d7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 14,
                          adjacentSpaces: [.a6,.a7,.a8,.b6,.b8,.c6,.c7,.c8],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.c8a6, .h1a8],
                          diagonalSpaces: [.c8,.b7,.a6,.h1,.g2,.f3,.e4,.d5,.c6,.a8],
                          knightSpaces: [.a5,.c5,.d6,.d8], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 15,
                          adjacentSpaces: [.a7,.a8,.b7,.c7,.c8],
                          file: .b,
                          fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.b8a7, .b8h2],
                          diagonalSpaces: [.b8,.a7,.c7,.d6,.e5,.f4,.g3,.h2],
                          knightSpaces: [.a6,.c6,.d7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 16,
                          adjacentSpaces: [.b1,.b2,.c2,.d1,.d2],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.c1a3, .c1h6],
                          diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.b2,.a3],
                          knightSpaces: [.a2,.b3,.d3,.e2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 17,
                          adjacentSpaces: [.b1,.b2,.b3,.c1,.c3,.d1,.d2,.d3],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.d1a4, .b1h7],
                          diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.d1,.b3,.a4],
                          knightSpaces: [.a1,.a3,.b4,.d4,.e1,.e3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 18,
                          adjacentSpaces: [.b2,.b3,.b4,.c2,.c4,.d2,.d3,.d4],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.e1a5, .a1h8],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.e1,.d2,.b4,.a5],
                          knightSpaces: [.a2,.a4,.b1,.b5,.d1,.d5,.e2,.e4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 19,
                          adjacentSpaces: [.b3,.b4,.b5,.c3,.c5,.d3,.d4,.d5],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.g8a2, .f1a6],
                          diagonalSpaces: [.f1,.e2,.d3,.c4,.b5,.a6,.g8,.f7,.e6,.d5,.b3,.a2],
                          knightSpaces: [.a3,.a5,.b2,.b6,.d2,.d6,.e3,.e5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 20,
                          adjacentSpaces: [.b4,.b5,.b6,.c4,.c6,.d4,.d5,.d6],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.f8a3, .g1a7],
                          diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.g1,.f2,.e3,.d4,.b6,.a7],
                          knightSpaces: [.a4,.a6,.b3,.b7,.d3,.d7,.e4,.e6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 21,
                          adjacentSpaces: [.b5,.b6,.b7,.c5,.c7,.d5,.d6,.d7],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.e8a4, .h1a8],
                          diagonalSpaces: [.e8,.d7,.c6,.b5,.a4,.h1,.g2,.f3,.e4,.d5,.b7,.a8],
                          knightSpaces: [.a5,.a7,.b4,.b8,.d4,.d8,.e6,.e7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 22,
                          adjacentSpaces: [.b6,.b7,.b8,.c6,.c8,.d6,.d7,.d8],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.d8a5, .b8h2],
                          diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.d8,.b6,.a5],
                          knightSpaces: [.a6,.a8,.b5,.d5,.e6,.e8], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 23,
                          adjacentSpaces: [.b7,.b8,.c7,.d7,.d8],
                          file: .c,
                          fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.c8a6, .c8h3],
                          diagonalSpaces: [.c8,.b7,.a6,.d7,.e6,.f5,.g4,.h3],
                          knightSpaces: [.a7,.b6,.d6,.e7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 24,
                          adjacentSpaces: [.c1,.c2,.d2,.e1,.e2],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.d1a4, .d1h5],
                          diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.c2,.b3,.a4],
                          knightSpaces: [.b2,.c3,.e3,.f2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 25,
                          adjacentSpaces: [.c1,.c2,.c3,.d1,.d3,.e1,.e2,.e3],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.c1h6, .e1a5],
                          diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.e1,.c3,.b4,.a5],
                          knightSpaces: [.b1,.b3,.c4,.e4,.f1,.f3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 26,
                          adjacentSpaces: [.c2,.c3,.c4,.d2,.d4,.e2,.e3,.e4],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.b1h7, .f1a6],
                          diagonalSpaces: [.f1,.e2,.d3,.c4,.b5,.a6,.b1,.c2,.e4,.f5,.g6,.h7],
                          knightSpaces: [.b2,.b4,.c1,.c5,.e1,.e5,.f2,.f4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 27,
                          adjacentSpaces: [.c3,.c4,.c5,.d3,.d5,.e3,.e4,.e5],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.a1h8, .g1a7],
                          diagonalSpaces: [.g1,.f2,.e3,.d4,.c5,.b6,.a7,.a1,.b2,.c3,.e5,.f6,.g7,.h8],
                          knightSpaces: [.b3,.b5,.c2,.c6,.e2,.e6,.f3,.f5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 28,
                          adjacentSpaces: [.c4,.c5,.c6,.d4,.d6,.e4,.e5,.e6],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.g8a2, .h1a8],
                          diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.h1,.g2,.f3,.e4,.c6,.b7,.a8],
                          knightSpaces: [.b4,.b6,.c3,.c7,.e3,.e7,.f4,.f6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 29,
                          adjacentSpaces: [.c5,.c6,.c7,.d5,.d7,.e5,.e6,.e7],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.f8a3, .b8h2],
                          diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.f8,.e7,.c5,.b4,.a3],
                          knightSpaces: [.b5,.b7,.c4,.c8,.e4,.e8,.f6,.f7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 30,
                          adjacentSpaces: [.c6,.c7,.c8,.d6,.d8,.e6,.e7,.e8],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.e8a4, .c8h3],
                          diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.e8,.c6,.b5,.a4],
                          knightSpaces: [.b6,.b8,.c5,.e5,.f6,.f8], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 31,
                          adjacentSpaces: [.c7,.c8,.d7,.e7,.e8],
                          file: .d,
                          fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.d8a5, .d8h4],
                          diagonalSpaces: [.d8,.c7,.b6,.a5,.e7,.f6,.g5,.h4],
                          knightSpaces: [.b7,.c6,.e6,.f7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 32,
                          adjacentSpaces: [.d1,.d2,.e2,.f1,.f2],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.e1a5, .e1h4],
                          diagonalSpaces: [.e1,.f2,.g3,.h4,.d2,.c3,.b4,.a5],
                          knightSpaces: [.c2,.d3,.f3,.g2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 33,
                          adjacentSpaces: [.d1,.d2,.d3,.e1,.e3,.f1,.f2,.f3],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.d1h5, .f1a6],
                          diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.f1,.d3,.c4,.b5,.a6],
                          knightSpaces: [.c1,.c3,.d4,.f4,.g1,.g3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 34,
                          adjacentSpaces: [.d2,.d3,.d4,.e2,.e4,.f2,.f3,.f4],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.c1h6, .g1a7],
                          diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.g1,.f2,.d4,.c5,.b6,.a7],
                          knightSpaces: [.c2,.c4,.d1,.d5,.f1,.f5,.g2,.g4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 35,
                          adjacentSpaces: [.d3,.d4,.d5,.e3,.e5,.f3,.f4,.f5],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.b1h7, .h1a8],
                          diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.h1,.g2,.f3,.d5,.c6,.b7,.a8],
                          knightSpaces: [.c3,.c5,.d2,.d6,.f2,.f6,.g3,.g5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 36,
                          adjacentSpaces: [.d4,.d5,.d6,.e4,.e6,.f4,.f5,.f6],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.a1h8, .b8h2],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.b8,.c7,.d6,.f4,.g3,.h2],
                          knightSpaces: [.c4,.c6,.d3,.d7,.f3,.f7,.g4,.g6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 37,
                          adjacentSpaces: [.d5,.d6,.d7,.e5,.e7,.f5,.f6,.f7],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.g8a2, .c8h3],
                          diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.g8,.f7,.d5,.c4,.b3,.a2],
                          knightSpaces: [.c5,.c7,.d4,.d8,.f4,.f8,.g6,.g7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 38,
                          adjacentSpaces: [.d6,.d7,.d8,.e6,.e8,.f6,.f7,.f8],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.f8a3, .d8h4],
                          diagonalSpaces: [.d8,.e7,.f6,.g5,.h4,.f8,.d6,.c5,.b4,.a3],
                          knightSpaces: [.c6,.c8,.d5,.f5,.g6,.g8], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 39,
                          adjacentSpaces: [.d7,.d8,.e7,.f7,.f8],
                          file: .e,
                          fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.e8a4, .e8h5],
                          diagonalSpaces: [.e8,.d7,.c6,.b5,.a4,.f7,.g6,.h5],
                          knightSpaces: [.c7,.d6,.f6,.g7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 40,
                          adjacentSpaces: [.e1,.e2,.f2,.g1,.g2],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.f1a6, .f1h3],
                          diagonalSpaces: [.f1,.g2,.h3,.e2,.d3,.c4,.b5,.a6],
                          knightSpaces: [.d2,.e3,.g3,.h2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 41,
                          adjacentSpaces: [.e1,.e2,.e3,.f1,.f3,.g1,.g2,.g3],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.e1h4, .g1a7],
                          diagonalSpaces: [.e1,.f2,.g3,.h4,.g1,.e3,.d4,.c5,.b6,.a7],
                          knightSpaces: [.d1,.d3,.e4,.g4,.g1,.h3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 42,
                          adjacentSpaces: [.e2,.e3,.e4,.f2,.f4,.g2,.g3,.g4],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.d1h5, .h1a8],
                          diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.h1,.g2,.e4,.d5,.c6,.b7,.a8],
                          knightSpaces: [.d2,.d4,.e1,.e5,.g1,.g5,.h2,.h4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 43,
                          adjacentSpaces: [.e3,.e4,.e5,.f3,.f5,.g3,.g4,.g5],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.c1h6, .b8h2],
                          diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.c1,.d2,.e3,.g5,.h6],
                          knightSpaces: [.d3,.d5,.e2,.e6,.g2,.g6,.h3,.h5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 44,
                          adjacentSpaces: [.e4,.e5,.e6,.f4,.f6,.g4,.g5,.g6],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.b1h7, .c8h3],
                          diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.c8,.d7,.e6,.g4,.h3],
                          knightSpaces: [.d4,.d6,.e3,.e7,.g3,.g7,.h4,.h6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 45,
                          adjacentSpaces: [.e5,.e6,.e7,.f5,.f7,.g5,.g6,.g7],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.a1h8, .d8h4],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.d8,.e7,.g5,.h4],
                          knightSpaces: [.d5,.d7,.e4,.e8,.g4,.g8,.h6,.h7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 46,
                          adjacentSpaces: [.e6,.e7,.e8,.f6,.f8,.g6,.g7,.g8],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.g8a2, .e8h5],
                          diagonalSpaces: [.e8,.f7,.g6,.h5,.g8,.e6,.d5,.c4,.b3,.a2],
                          knightSpaces: [.d6,.d8,.e5,.g5,.h6,.h8], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 47,
                          adjacentSpaces: [.e7,.e8,.f7,.g7,.g8],
                          file: .f,
                          fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.f8a3, .f8h6],
                          diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.g7,.h6],
                          knightSpaces: [.d7,.e6,.g6,.h7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 48,
                          adjacentSpaces: [.f1,.f2,.g2,.h1,.h2],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.g1a7, .g1h2],
                          diagonalSpaces: [.g1,.h2,.f2,.e3,.d4,.c5,.b6,.a7],
                          knightSpaces: [.h3,.f3,.e2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 49,
                          adjacentSpaces: [.f1,.f2,.f3,.g1,.g3,.h1,.h2,.h3],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.f1h3, .h1a8],
                          diagonalSpaces: [.f1,.g2,.h3,.h1,.f3,.e4,.d5,.c6,.b7,.a8],
                          knightSpaces: [.h4,.f4,.e1,.e3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 50,
                          adjacentSpaces: [.f2,.f3,.f4,.g2,.g4,.h2,.h3,.h4],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.e1h4, .b8h2],
                          diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.e1,.f2,.h4],
                          knightSpaces: [.h1,.h5,.f1,.f5,.e2,.e4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 51,
                          adjacentSpaces: [.f3,.f4,.f5,.g3,.g5,.h3,.h4,.h5],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.d1h5, .c8h3],
                          diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.d1,.e2,.f3,.h5],
                          knightSpaces: [.h2,.h6,.f2,.f6,.e3,.e5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 52,
                          adjacentSpaces: [.f4,.f5,.f6,.g4,.g6,.h4,.h5,.h6],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.c1h6, .d8h4],
                          diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.d8,.e7,.f6,.h4],
                          knightSpaces: [.h3,.h7,.f3,.f7,.e4,.e6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 53,
                          adjacentSpaces: [.f5,.f6,.f7,.g5,.g7,.h5,.h6,.h7],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.b1h7, .e8h5],
                          diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.e8,.f7,.h5],
                          knightSpaces: [.h4,.h8,.f4,.f8,.e5,.e7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 54,
                          adjacentSpaces: [.f6,.f7,.f8,.g6,.g8,.h6,.h7,.h8],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.a1h8, .f8h6],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.f8,.h6],
                          knightSpaces: [.h5,.f5,.e6,.e8], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 55,
                          adjacentSpaces: [.f7,.f8,.g7,.h7,.h8],
                          file: .g,
                          fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.g8a2, .g8h7],
                          diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.h7],
                          knightSpaces: [.h6,.f6,.e7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 56,
                          adjacentSpaces: [.h2,.g1,.g2],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._1,
                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
                          diagonals: [.h1a8],
                          diagonalSpaces: [.h1,.g2,.f3,.e4,.d5,.c6,.b7,.a8],
                          knightSpaces: [.g3,.f2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 57,
                          adjacentSpaces: [.h1,.h3,.g1,.g2,.g3],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._2,
                          rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
                          diagonals: [.b8h2, .g1h2],
                          diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.g1],
                          knightSpaces: [.g4,.f1,.f3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 58,
                          adjacentSpaces: [.h2,.h4,.g2,.g3,.g4],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._3,
                          rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
                          diagonals: [.c8h3, .f1h3],
                          diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.f1,.g2],
                          knightSpaces: [.g5,.g1,.f4,.f2], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 59,
                          adjacentSpaces: [.h3,.h5,.g3,.g4,.g5],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._4,
                          rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
                          diagonals: [.d8h4, .e1h4],
                          diagonalSpaces: [.d8,.e7,.f6,.g5,.h4,.e1,.f2,.g3],
                          knightSpaces: [.g6,.g2,.f5,.f3], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 60,
                          adjacentSpaces: [.h4,.h6,.g4,.g5,.g6],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._5,
                          rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
                          diagonals: [.e8h5, .d1h5],
                          diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.e8,.f7,.g6],
                          knightSpaces: [.g7,.g3,.f6,.f4], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 61,
                          adjacentSpaces: [.h5,.h7,.g5,.g6,.g7],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._6,
                          rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
                          diagonals: [.f8h6, .c1h6],
                          diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.f8,.g7],
                          knightSpaces: [.g8,.g4,.f7,.f5], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 62,
                          adjacentSpaces: [.h6,.h8,.g6,.g7,.g8],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._7,
                          rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
                          diagonals: [.g8h7, .b1h7],
                          diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.g8],
                          knightSpaces: [.g5,.f8,.f6], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: []),
        (index: 63,
                          adjacentSpaces: [.h7,.g7,.g8],
                          file: .h,
                          fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
                          rank: ._8,
                          rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
                          diagonals: [.a1h8],
                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8],
                          knightSpaces: [.g6,.f7], queenSpaces: [], whiteKingSpaces: [], blackKingSpaces: [], rookSpaces: [])
        ]
}

typealias SquareNormalized = (
    index: Int,
    adjacentSpaces: Set<Int>,
    file: File,
    fileSpaces: Set<Int>,
    rank: Rank,
    rankSpaces: Set<Int>,
    diagonals: Set<Diagonal>,
    diagonalSpaces: Set<Int>,
    knightSpaces: Set<Int>,
    queenSpaces: Set<Int>,
    whiteKingSpaces: Set<Int>,
    blackKingSpaces: Set<Int>,
    rookSpaces: Set<Int>)

struct SquareArrayNormalized {

    subscript(space: Space) -> SquareNormalized {
        get {
            return model[space.rawValue]
        }
    }
    
//    subscript(int: Int) -> SquareNormalized {
//        get {
//            return model[int]
//        }
//    }

    let model: [SquareNormalized] = [
        (index: 0, adjacentSpaces: [9, 1, 8], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.a1h8], diagonalSpaces: [36, 0, 18, 27, 9, 45, 54, 63], knightSpaces: [17, 10], queenSpaces: [16, 0, 7, 5, 40, 6, 8, 18, 3, 9, 45, 54, 63, 2, 32, 36, 48, 4, 1, 27, 56, 24], whiteKingSpaces: [8, 1, 9, 48, 16], blackKingSpaces: [8, 1, 55, 9, 23], rookSpaces: [16, 0, 7, 5, 40, 6, 8, 3, 2, 32, 48, 4, 1, 56, 24]),
        (index: 1, adjacentSpaces: [8, 0, 2, 10, 9], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.b1a2], diagonalSpaces: [10, 19, 37, 46, 28, 8, 55, 1], knightSpaces: [11, 18, 16], queenSpaces: [7, 0, 25, 19, 5, 33, 55, 6, 37, 9, 3, 49, 57, 28, 8, 2, 17, 10, 4, 1, 46, 41], whiteKingSpaces: [0, 10, 16, 9, 8, 48, 2], blackKingSpaces: [0, 10, 9, 23, 8, 55, 2], rookSpaces: [7, 0, 25, 5, 33, 6, 9, 3, 49, 57, 2, 17, 4, 1, 41]),
        (index: 2, adjacentSpaces: [10, 11, 1, 9, 3], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.f8a3, Chess.Diagonal.c1a3], diagonalSpaces: [38, 11, 16, 29, 20, 9, 47, 2], knightSpaces: [19, 12, 8, 17], queenSpaces: [42, 7, 0, 50, 16, 58, 5, 11, 18, 6, 9, 3, 2, 47, 10, 4, 1, 34, 38, 29, 26, 20], whiteKingSpaces: [3, 10, 11, 16, 9, 48, 1], blackKingSpaces: [3, 10, 11, 9, 23, 55, 1], rookSpaces: [42, 7, 0, 50, 58, 5, 18, 6, 3, 2, 10, 4, 1, 34, 26]),
        (index: 3, adjacentSpaces: [10, 11, 2, 12, 4], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.e8a4, Chess.Diagonal.d1a4], diagonalSpaces: [3, 10, 30, 24, 17, 12, 39, 21], knightSpaces: [13, 18, 20, 9], queenSpaces: [19, 0, 7, 11, 5, 59, 6, 35, 12, 3, 30, 39, 2, 21, 10, 43, 17, 27, 4, 1, 51, 24], whiteKingSpaces: [10, 11, 16, 12, 48, 4, 2], blackKingSpaces: [10, 11, 12, 23, 4, 55, 2], rookSpaces: [19, 0, 7, 11, 5, 59, 6, 35, 3, 2, 43, 27, 4, 1, 51]),
        (index: 4, adjacentSpaces: [11, 12, 13, 5, 3], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.d8a5, Chess.Diagonal.e1a5], diagonalSpaces: [18, 11, 31, 13, 25, 4, 32, 22], knightSpaces: [19, 10, 14, 21], queenSpaces: [7, 0, 25, 5, 11, 31, 6, 44, 52, 3, 28, 12, 60, 18, 2, 22, 36, 13, 32, 4, 1, 20], whiteKingSpaces: [3, 11, 16, 13, 5, 12, 48], blackKingSpaces: [3, 11, 13, 5, 12, 23, 55], rookSpaces: [7, 0, 5, 6, 44, 52, 3, 28, 12, 60, 2, 36, 4, 1, 20]),
        (index: 5, adjacentSpaces: [14, 12, 13, 4, 6], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.f1a6, Chess.Diagonal.c8a6], diagonalSpaces: [19, 5, 23, 33, 12, 26, 40, 14], knightSpaces: [11, 15, 20, 22], queenSpaces: [7, 0, 61, 19, 5, 33, 40, 6, 37, 53, 3, 45, 12, 2, 21, 14, 13, 4, 1, 29, 23, 26], whiteKingSpaces: [16, 13, 6, 12, 48, 4, 14], blackKingSpaces: [13, 6, 12, 23, 4, 55, 14], rookSpaces: [7, 0, 61, 5, 6, 37, 53, 3, 45, 2, 21, 13, 4, 1, 29]),
        (index: 6, adjacentSpaces: [13, 5, 15, 7, 14], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.b8a7, Chess.Diagonal.g1a7], diagonalSpaces: [27, 20, 13, 6, 48, 15, 41, 34], knightSpaces: [12, 23, 21], queenSpaces: [7, 0, 5, 6, 3, 30, 22, 54, 62, 2, 14, 15, 13, 48, 4, 1, 27, 46, 38, 41, 34, 20], whiteKingSpaces: [16, 13, 5, 7, 48, 15, 14], blackKingSpaces: [13, 5, 23, 15, 7, 55, 14], rookSpaces: [7, 0, 5, 6, 3, 30, 22, 54, 62, 2, 14, 4, 1, 46, 38]),
        (index: 7, adjacentSpaces: [14, 6, 15], file: File.a, fileSpaces: [3, 0, 6, 5, 4, 7, 1, 2], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.h1a8], diagonalSpaces: [14, 56, 49, 28, 42, 7, 35, 21], knightSpaces: [22, 13], queenSpaces: [42, 7, 0, 5, 31, 55, 6, 63, 39, 3, 49, 28, 35, 2, 15, 47, 14, 21, 4, 1, 23, 56], whiteKingSpaces: [16, 15, 48, 14, 6], blackKingSpaces: [55, 15, 23, 14, 6], rookSpaces: [7, 0, 5, 31, 55, 6, 63, 39, 3, 2, 15, 47, 4, 1, 23]),
        (index: 8, adjacentSpaces: [0, 1, 17, 9, 16], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.b1a2, Chess.Diagonal.b1h7], diagonalSpaces: [62, 44, 17, 53, 8, 1, 26, 35], knightSpaces: [2, 18, 25], queenSpaces: [16, 0, 11, 40, 35, 8, 9, 12, 44, 53, 62, 14, 15, 10, 32, 13, 48, 17, 1, 56, 26, 24], whiteKingSpaces: [0, 1, 17, 9, 16, 48], blackKingSpaces: [0, 16, 9, 17, 23, 55, 1], rookSpaces: [16, 0, 11, 40, 8, 9, 12, 14, 15, 10, 32, 13, 48, 56, 24]),
        (index: 9, adjacentSpaces: [0, 10, 16, 18, 17, 8, 1, 2], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.c1a3, Chess.Diagonal.a1h8], diagonalSpaces: [36, 0, 18, 27, 9, 16, 45, 54, 2, 63], knightSpaces: [19, 26, 3, 24], queenSpaces: [16, 0, 25, 11, 33, 18, 8, 9, 12, 49, 57, 45, 54, 14, 15, 2, 10, 17, 13, 36, 1, 27, 63, 41], whiteKingSpaces: [0, 10, 16, 18, 17, 8, 48, 1, 2], blackKingSpaces: [0, 10, 16, 18, 17, 23, 8, 55, 1, 2], rookSpaces: [25, 11, 33, 8, 9, 12, 49, 57, 14, 15, 10, 17, 13, 1, 41]),
        (index: 10, adjacentSpaces: [3, 18, 11, 9, 19, 17, 1, 2], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.d1a4], diagonalSpaces: [3, 10, 19, 37, 46, 28, 24, 55, 1, 17], knightSpaces: [27, 0, 20, 16, 4, 25], queenSpaces: [42, 19, 50, 58, 11, 55, 18, 8, 9, 12, 3, 37, 28, 14, 15, 2, 10, 17, 13, 1, 34, 46, 26, 24], whiteKingSpaces: [3, 18, 11, 16, 9, 19, 17, 48, 1, 2], blackKingSpaces: [3, 18, 11, 9, 19, 17, 23, 55, 1, 2], rookSpaces: [42, 50, 58, 11, 18, 8, 9, 12, 14, 15, 2, 10, 13, 34, 26]),
        (index: 11, adjacentSpaces: [3, 10, 18, 19, 20, 4, 12, 2], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.f8a3, Chess.Diagonal.e1a5], diagonalSpaces: [38, 11, 18, 29, 20, 47, 25, 4, 32, 2], knightSpaces: [28, 1, 5, 17, 26, 21], queenSpaces: [19, 25, 11, 59, 35, 18, 8, 9, 3, 12, 14, 15, 47, 10, 43, 13, 32, 27, 4, 2, 38, 29, 51, 20], whiteKingSpaces: [3, 10, 18, 16, 19, 20, 4, 12, 48, 2], blackKingSpaces: [3, 10, 18, 19, 20, 4, 12, 23, 55, 2], rookSpaces: [19, 11, 59, 35, 8, 9, 3, 12, 14, 15, 10, 43, 13, 27, 51]),
        (index: 12, adjacentSpaces: [3, 11, 19, 13, 20, 5, 4, 21], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.f1a6, Chess.Diagonal.e8a4], diagonalSpaces: [3, 30, 19, 5, 12, 33, 39, 26, 40, 21], knightSpaces: [27, 2, 18, 29, 6, 22], queenSpaces: [19, 11, 5, 33, 40, 44, 52, 9, 12, 8, 28, 60, 14, 15, 3, 10, 36, 13, 30, 4, 39, 21, 26, 20], whiteKingSpaces: [3, 11, 16, 19, 13, 20, 5, 4, 48, 21], blackKingSpaces: [3, 11, 19, 13, 20, 5, 4, 23, 55, 21], rookSpaces: [11, 44, 52, 9, 12, 8, 28, 60, 14, 15, 10, 36, 13, 4, 20]),
        (index: 13, adjacentSpaces: [21, 22, 20, 6, 5, 4, 12, 14], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.d8a5, Chess.Diagonal.g1a7], diagonalSpaces: [34, 27, 31, 13, 20, 6, 4, 48, 41, 22], knightSpaces: [19, 28, 30, 23, 3, 7], queenSpaces: [61, 11, 5, 31, 37, 8, 9, 12, 45, 53, 6, 22, 14, 15, 21, 10, 13, 48, 27, 4, 34, 41, 29, 20], whiteKingSpaces: [21, 22, 16, 20, 6, 5, 4, 12, 48, 14], blackKingSpaces: [21, 22, 20, 6, 5, 4, 12, 23, 55, 14], rookSpaces: [61, 11, 5, 37, 8, 9, 12, 45, 53, 14, 15, 21, 10, 13, 29]),
        (index: 14, adjacentSpaces: [22, 6, 13, 5, 7, 15, 23, 21], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.h1a8, Chess.Diagonal.c8a6], diagonalSpaces: [21, 56, 5, 23, 49, 42, 28, 35, 7, 14], knightSpaces: [20, 29, 4, 31], queenSpaces: [42, 7, 11, 5, 35, 6, 8, 9, 22, 30, 12, 54, 62, 14, 15, 21, 10, 49, 13, 28, 46, 38, 56, 23], whiteKingSpaces: [22, 16, 6, 13, 5, 7, 15, 23, 48, 21], blackKingSpaces: [22, 6, 13, 5, 7, 15, 23, 55, 21], rookSpaces: [11, 6, 8, 9, 22, 30, 12, 54, 62, 14, 15, 10, 13, 46, 38]),
        (index: 15, adjacentSpaces: [14, 22, 23, 6, 7], file: File.b, fileSpaces: [10, 11, 9, 13, 12, 8, 15, 14], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.b8a7, Chess.Diagonal.b8h2], diagonalSpaces: [36, 50, 29, 6, 15, 57, 43, 22], knightSpaces: [5, 30, 21], queenSpaces: [7, 50, 11, 31, 55, 63, 8, 9, 12, 39, 6, 57, 22, 14, 15, 47, 10, 36, 13, 43, 23, 29], whiteKingSpaces: [22, 16, 6, 7, 23, 48, 14], blackKingSpaces: [14, 22, 55, 23, 6, 7], rookSpaces: [7, 11, 31, 55, 63, 8, 9, 12, 39, 14, 15, 47, 10, 13, 23]),
        (index: 16, adjacentSpaces: [8, 17, 9, 25, 24], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.c1h6, Chess.Diagonal.c1a3], diagonalSpaces: [61, 16, 52, 9, 25, 2, 43, 34], knightSpaces: [10, 1, 26, 33], queenSpaces: [24, 16, 0, 19, 61, 25, 40, 18, 8, 52, 22, 9, 21, 2, 17, 32, 43, 48, 34, 56, 23, 20], whiteKingSpaces: [16, 9, 17, 25, 48, 8, 24], blackKingSpaces: [9, 17, 23, 8, 25, 24, 55], rookSpaces: [24, 16, 0, 19, 40, 18, 8, 22, 21, 17, 32, 48, 56, 23, 20]),
        (index: 17, adjacentSpaces: [10, 18, 16, 9, 24, 25, 8, 26], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.d1a4, Chess.Diagonal.b1h7], diagonalSpaces: [3, 10, 62, 44, 17, 53, 8, 24, 26, 35], knightSpaces: [27, 11, 0, 2, 32, 34], queenSpaces: [24, 16, 19, 25, 33, 35, 18, 44, 9, 22, 49, 57, 3, 62, 21, 53, 8, 17, 10, 1, 41, 23, 26, 20], whiteKingSpaces: [10, 18, 16, 9, 24, 25, 8, 48, 26], blackKingSpaces: [10, 18, 16, 9, 24, 25, 8, 23, 55, 26], rookSpaces: [16, 19, 25, 33, 18, 9, 22, 49, 57, 21, 17, 1, 41, 23, 20]),
        (index: 18, adjacentSpaces: [10, 11, 27, 9, 19, 17, 25, 26], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.e1a5, Chess.Diagonal.a1h8], diagonalSpaces: [36, 0, 18, 27, 9, 11, 45, 54, 25, 32, 4, 63], knightSpaces: [3, 24, 12, 8, 28, 1, 33, 35], queenSpaces: [54, 2, 36, 19, 58, 26, 9, 45, 16, 27, 20, 25, 18, 50, 10, 21, 11, 34, 22, 17, 32, 23, 63, 0, 42, 4], whiteKingSpaces: [10, 11, 27, 9, 19, 16, 17, 25, 48, 26], blackKingSpaces: [10, 11, 27, 9, 19, 17, 25, 23, 55, 26], rookSpaces: [42, 16, 50, 19, 58, 18, 22, 21, 2, 10, 17, 34, 23, 26, 20]),
        (index: 19, adjacentSpaces: [10, 11, 18, 27, 20, 28, 12, 26], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.f1a6], diagonalSpaces: [1, 10, 19, 37, 5, 33, 12, 55, 46, 26, 40, 28], knightSpaces: [36, 9, 29, 13, 4, 25, 2, 34], queenSpaces: [33, 55, 46, 19, 1, 26, 43, 12, 16, 27, 20, 28, 59, 18, 10, 21, 11, 3, 22, 40, 17, 23, 5, 35, 51, 37], whiteKingSpaces: [10, 11, 18, 27, 20, 16, 28, 12, 48, 26], blackKingSpaces: [10, 11, 18, 27, 20, 28, 12, 23, 55, 26], rookSpaces: [16, 19, 11, 59, 35, 18, 22, 3, 21, 17, 43, 27, 23, 51, 20]),
        (index: 20, adjacentSpaces: [11, 27, 29, 19, 13, 28, 12, 21], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.f8a3, Chess.Diagonal.g1a7], diagonalSpaces: [38, 11, 27, 29, 20, 13, 6, 47, 48, 2, 41, 34], knightSpaces: [3, 10, 30, 37, 5, 26, 35, 14], queenSpaces: [2, 29, 36, 19, 41, 52, 12, 44, 16, 27, 28, 20, 47, 18, 6, 21, 11, 34, 48, 22, 17, 23, 13, 38, 60, 4], whiteKingSpaces: [11, 27, 29, 19, 13, 16, 28, 12, 48, 21], blackKingSpaces: [11, 27, 29, 19, 13, 28, 12, 23, 55, 21], rookSpaces: [16, 19, 18, 44, 52, 22, 28, 12, 60, 21, 17, 36, 4, 23, 20]),
        (index: 21, adjacentSpaces: [22, 30, 29, 20, 13, 28, 12, 14], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.h1a8, Chess.Diagonal.e8a4], diagonalSpaces: [3, 56, 30, 14, 49, 12, 42, 28, 39, 35, 7, 21], knightSpaces: [38, 11, 27, 31, 6, 37, 4, 15], queenSpaces: [29, 30, 19, 7, 12, 45, 56, 16, 53, 61, 28, 20, 18, 21, 3, 22, 49, 17, 23, 13, 5, 39, 42, 35, 37, 14], whiteKingSpaces: [22, 30, 16, 29, 20, 13, 28, 12, 48, 14], blackKingSpaces: [22, 30, 29, 20, 13, 28, 12, 23, 55, 14], rookSpaces: [16, 61, 19, 5, 18, 37, 53, 22, 45, 21, 17, 13, 29, 23, 20]),
        (index: 22, adjacentSpaces: [21, 30, 29, 31, 13, 23, 15, 14], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.d8a5, Chess.Diagonal.b8h2], diagonalSpaces: [36, 50, 29, 31, 13, 4, 15, 57, 43, 22], knightSpaces: [12, 39, 5, 37, 7, 28], queenSpaces: [16, 19, 50, 31, 18, 6, 22, 30, 54, 57, 62, 21, 14, 15, 17, 36, 13, 43, 4, 46, 38, 23, 29, 20], whiteKingSpaces: [21, 30, 16, 29, 31, 13, 23, 15, 48, 14], blackKingSpaces: [21, 30, 29, 31, 13, 23, 15, 55, 14], rookSpaces: [16, 19, 18, 6, 22, 30, 54, 62, 21, 14, 17, 46, 38, 23, 20]),
        (index: 23, adjacentSpaces: [31, 30, 15, 14, 22], file: File.c, fileSpaces: [22, 18, 16, 19, 20, 17, 23, 21], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.c8h3, Chess.Diagonal.c8a6], diagonalSpaces: [30, 51, 37, 44, 5, 23, 58, 14], knightSpaces: [13, 29, 38, 6], queenSpaces: [16, 19, 7, 58, 5, 31, 55, 18, 63, 39, 22, 30, 37, 44, 21, 15, 47, 17, 14, 23, 51, 20], whiteKingSpaces: [22, 30, 16, 31, 15, 48, 14], blackKingSpaces: [22, 30, 31, 23, 15, 55, 14], rookSpaces: [16, 19, 7, 31, 55, 18, 63, 39, 22, 21, 15, 47, 17, 23, 20]),
        (index: 24, adjacentSpaces: [32, 17, 16, 25, 33], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.d1a4, Chess.Diagonal.d1h5], diagonalSpaces: [3, 10, 51, 24, 33, 42, 60, 17], knightSpaces: [34, 18, 41, 9], queenSpaces: [26, 16, 0, 25, 51, 42, 33, 31, 40, 28, 8, 30, 3, 60, 10, 32, 17, 48, 27, 29, 56, 24], whiteKingSpaces: [48, 32, 17, 16, 25, 33], blackKingSpaces: [16, 17, 23, 25, 33, 32, 55], rookSpaces: [26, 16, 0, 25, 31, 40, 28, 8, 30, 32, 48, 27, 29, 56, 24]),
        (index: 25, adjacentSpaces: [18, 16, 17, 24, 33, 32, 26, 34], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.c1h6, Chess.Diagonal.e1a5], diagonalSpaces: [61, 18, 16, 52, 11, 25, 4, 32, 43, 34], knightSpaces: [19, 8, 10, 35, 40, 42], queenSpaces: [16, 61, 25, 33, 31, 11, 18, 28, 9, 30, 49, 57, 52, 17, 32, 43, 27, 1, 4, 34, 41, 29, 26, 24], whiteKingSpaces: [18, 16, 17, 24, 33, 48, 32, 26, 34], blackKingSpaces: [18, 16, 17, 24, 33, 23, 32, 26, 55, 34], rookSpaces: [25, 33, 31, 28, 9, 30, 49, 57, 17, 27, 1, 41, 29, 26, 24]),
        (index: 26, adjacentSpaces: [18, 27, 19, 17, 25, 33, 35, 34], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.f1a6, Chess.Diagonal.b1h7], diagonalSpaces: [53, 19, 44, 62, 5, 33, 12, 8, 17, 26, 40, 35], knightSpaces: [36, 11, 16, 9, 20, 32, 41, 43], queenSpaces: [33, 2, 29, 24, 30, 19, 62, 58, 26, 12, 31, 44, 27, 28, 53, 25, 18, 50, 10, 34, 40, 17, 5, 42, 8, 35], whiteKingSpaces: [18, 27, 16, 19, 17, 25, 33, 48, 35, 34], blackKingSpaces: [18, 27, 19, 17, 25, 33, 23, 55, 35, 34], rookSpaces: [42, 50, 25, 58, 31, 18, 28, 30, 2, 10, 27, 34, 29, 26, 24]),
        (index: 27, adjacentSpaces: [36, 18, 19, 20, 28, 26, 35, 34], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.g1a7, Chess.Diagonal.a1h8], diagonalSpaces: [0, 6, 18, 9, 63, 45, 54, 36, 13, 48, 27, 34, 41, 20], knightSpaces: [10, 37, 44, 17, 12, 33, 42, 21], queenSpaces: [54, 29, 36, 24, 30, 19, 41, 26, 43, 31, 9, 45, 27, 28, 20, 25, 59, 18, 6, 11, 3, 34, 48, 13, 63, 0, 35, 51], whiteKingSpaces: [36, 18, 16, 19, 20, 28, 48, 26, 35, 34], blackKingSpaces: [36, 18, 19, 20, 28, 23, 55, 26, 35, 34], rookSpaces: [26, 19, 25, 11, 31, 59, 35, 28, 3, 30, 43, 27, 29, 51, 24]),
        (index: 28, adjacentSpaces: [36, 27, 29, 19, 20, 37, 35, 21], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.h1a8], diagonalSpaces: [42, 19, 7, 35, 55, 37, 28, 49, 21, 14, 10, 1, 46, 56], knightSpaces: [34, 18, 11, 38, 13, 45, 43, 22], queenSpaces: [55, 4, 46, 24, 36, 29, 30, 19, 7, 1, 26, 52, 12, 31, 44, 56, 27, 28, 20, 25, 10, 21, 49, 42, 35, 60, 37, 14], whiteKingSpaces: [36, 27, 16, 29, 19, 20, 37, 48, 35, 21], blackKingSpaces: [36, 27, 29, 19, 20, 37, 23, 55, 35, 21], rookSpaces: [24, 25, 31, 28, 52, 30, 44, 12, 60, 36, 27, 4, 29, 26, 20]),
        (index: 29, adjacentSpaces: [22, 36, 30, 38, 20, 37, 28, 21], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.f8a3, Chess.Diagonal.b8h2], diagonalSpaces: [36, 38, 50, 11, 29, 20, 47, 15, 57, 2, 43, 22], knightSpaces: [19, 46, 12, 23, 45, 39, 35, 14], queenSpaces: [2, 29, 36, 24, 30, 26, 43, 31, 45, 15, 27, 20, 61, 28, 25, 53, 47, 50, 21, 11, 22, 13, 5, 38, 37, 57], whiteKingSpaces: [22, 36, 30, 38, 16, 20, 37, 28, 48, 21], blackKingSpaces: [22, 36, 30, 38, 20, 37, 28, 23, 55, 21], rookSpaces: [61, 25, 5, 31, 37, 28, 53, 30, 45, 21, 13, 27, 29, 26, 24]),
        (index: 30, adjacentSpaces: [22, 38, 29, 31, 37, 23, 39, 21], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.e8a4, Chess.Diagonal.c8h3], diagonalSpaces: [3, 30, 51, 37, 44, 58, 23, 12, 39, 21], knightSpaces: [45, 13, 36, 15, 20, 47], queenSpaces: [51, 23, 25, 58, 31, 6, 28, 37, 30, 22, 54, 3, 62, 14, 44, 12, 39, 21, 27, 46, 38, 29, 26, 24], whiteKingSpaces: [22, 38, 16, 29, 31, 37, 23, 48, 39, 21], blackKingSpaces: [22, 38, 29, 31, 37, 23, 55, 39, 21], rookSpaces: [25, 31, 6, 28, 30, 22, 54, 62, 14, 27, 46, 38, 29, 26, 24]),
        (index: 31, adjacentSpaces: [39, 30, 38, 23, 22], file: File.d, fileSpaces: [27, 30, 29, 31, 24, 25, 28, 26], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.d8a5, Chess.Diagonal.d8h4], diagonalSpaces: [38, 52, 31, 13, 4, 45, 59, 22], knightSpaces: [46, 37, 14, 21], queenSpaces: [26, 7, 25, 31, 55, 63, 28, 39, 30, 52, 45, 59, 22, 15, 47, 13, 27, 4, 38, 29, 23, 24], whiteKingSpaces: [38, 30, 16, 23, 48, 39, 22], blackKingSpaces: [39, 30, 38, 23, 55, 22], rookSpaces: [26, 7, 25, 31, 55, 63, 28, 39, 30, 15, 47, 27, 29, 23, 24]),
        (index: 32, adjacentSpaces: [33, 40, 41, 25, 24], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.e1a5, Chess.Diagonal.e1h4], diagonalSpaces: [18, 50, 11, 25, 59, 4, 32, 41], knightSpaces: [42, 17, 49, 26], queenSpaces: [16, 0, 50, 25, 33, 35, 40, 37, 8, 39, 18, 11, 59, 36, 32, 48, 4, 34, 38, 56, 41, 24], whiteKingSpaces: [16, 24, 33, 25, 48, 41, 40], blackKingSpaces: [24, 33, 25, 23, 55, 41, 40], rookSpaces: [16, 0, 33, 35, 40, 37, 8, 39, 36, 32, 48, 34, 38, 56, 24]),
        (index: 33, adjacentSpaces: [41, 24, 25, 42, 32, 26, 40, 34], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.f1a6, Chess.Diagonal.d1h5], diagonalSpaces: [51, 19, 24, 33, 42, 60, 12, 26, 40, 5], knightSpaces: [27, 50, 18, 43, 16, 48], queenSpaces: [42, 19, 26, 25, 33, 35, 40, 37, 5, 9, 49, 39, 57, 60, 12, 17, 36, 32, 1, 34, 38, 41, 51, 24], whiteKingSpaces: [41, 16, 24, 25, 42, 48, 32, 26, 40, 34], blackKingSpaces: [41, 55, 24, 25, 42, 23, 32, 26, 40, 34], rookSpaces: [25, 33, 35, 37, 9, 49, 39, 57, 17, 36, 32, 1, 34, 38, 41]),
        (index: 34, adjacentSpaces: [43, 27, 25, 33, 42, 26, 35, 41], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.c1h6, Chess.Diagonal.g1a7], diagonalSpaces: [61, 27, 16, 52, 20, 13, 6, 25, 48, 41, 43, 34], knightSpaces: [51, 19, 44, 17, 24, 28, 49, 40], queenSpaces: [33, 2, 36, 41, 58, 26, 52, 43, 16, 27, 20, 61, 25, 18, 50, 10, 6, 34, 48, 32, 13, 38, 39, 42, 35, 37], whiteKingSpaces: [43, 27, 16, 25, 33, 42, 48, 26, 35, 41], blackKingSpaces: [43, 55, 27, 25, 33, 42, 23, 26, 35, 41], rookSpaces: [42, 50, 58, 33, 35, 18, 37, 39, 2, 10, 36, 32, 34, 38, 26]),
        (index: 35, adjacentSpaces: [36, 27, 44, 28, 42, 26, 43, 34], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.h1a8, Chess.Diagonal.b1h7], diagonalSpaces: [42, 7, 35, 8, 44, 53, 49, 28, 62, 21, 14, 17, 56, 26], knightSpaces: [18, 50, 52, 29, 20, 25, 45, 41], queenSpaces: [33, 36, 19, 7, 62, 26, 43, 44, 56, 27, 53, 28, 59, 21, 11, 3, 34, 49, 32, 17, 38, 39, 42, 8, 35, 51, 37, 14], whiteKingSpaces: [36, 27, 16, 44, 28, 42, 48, 26, 43, 34], blackKingSpaces: [36, 27, 44, 28, 23, 42, 55, 26, 43, 34], rookSpaces: [19, 11, 33, 35, 37, 59, 39, 3, 36, 32, 43, 27, 34, 38, 51]),
        (index: 36, adjacentSpaces: [27, 29, 37, 44, 28, 45, 35, 43], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.b8h2, Chess.Diagonal.a1h8], diagonalSpaces: [0, 50, 18, 63, 9, 22, 45, 54, 57, 15, 36, 43, 27, 29], knightSpaces: [30, 51, 19, 46, 53, 42, 26, 21], queenSpaces: [33, 57, 54, 29, 36, 43, 52, 12, 44, 9, 45, 15, 27, 28, 20, 18, 50, 34, 22, 32, 63, 0, 38, 39, 35, 60, 37, 4], whiteKingSpaces: [27, 16, 29, 37, 44, 28, 45, 48, 35, 43], blackKingSpaces: [27, 29, 37, 44, 28, 45, 23, 55, 35, 43], rookSpaces: [33, 35, 37, 44, 52, 28, 39, 12, 60, 36, 32, 4, 34, 38, 20]),
        (index: 37, adjacentSpaces: [36, 38, 30, 29, 44, 28, 45, 46], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.c8h3], diagonalSpaces: [10, 30, 51, 19, 37, 44, 58, 23, 46, 55, 28, 1], knightSpaces: [27, 20, 31, 47, 53, 54, 43, 22], queenSpaces: [33, 46, 55, 29, 36, 30, 19, 1, 58, 44, 45, 53, 61, 28, 10, 21, 34, 32, 23, 13, 5, 38, 39, 35, 51, 37], whiteKingSpaces: [36, 38, 30, 16, 29, 44, 28, 45, 46, 48], blackKingSpaces: [36, 38, 30, 29, 44, 28, 45, 46, 23, 55], rookSpaces: [61, 5, 33, 35, 37, 39, 53, 45, 21, 36, 13, 32, 34, 38, 29]),
        (index: 38, adjacentSpaces: [30, 29, 31, 37, 46, 45, 47, 39], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.f8a3, Chess.Diagonal.d8h4], diagonalSpaces: [38, 11, 52, 29, 31, 20, 47, 45, 59, 2], knightSpaces: [28, 44, 55, 23, 53, 21], queenSpaces: [33, 35, 11, 37, 6, 39, 22, 30, 54, 52, 62, 14, 31, 47, 45, 36, 32, 59, 2, 34, 38, 46, 29, 20], whiteKingSpaces: [30, 16, 29, 31, 37, 46, 45, 47, 48, 39], blackKingSpaces: [30, 29, 31, 37, 46, 45, 47, 23, 39, 55], rookSpaces: [33, 35, 37, 6, 39, 22, 30, 54, 62, 14, 36, 32, 34, 38, 46]),
        (index: 39, adjacentSpaces: [46, 30, 38, 47, 31], file: File.e, fileSpaces: [36, 38, 37, 33, 32, 35, 39, 34], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.e8a4, Chess.Diagonal.e8h5], diagonalSpaces: [3, 30, 46, 12, 53, 60, 39, 21], knightSpaces: [45, 54, 29, 22], queenSpaces: [7, 33, 31, 35, 37, 55, 39, 63, 3, 30, 12, 53, 60, 15, 47, 21, 36, 32, 34, 38, 23, 46], whiteKingSpaces: [38, 30, 16, 31, 46, 47, 48], blackKingSpaces: [38, 30, 31, 46, 23, 47, 55], rookSpaces: [7, 33, 31, 35, 37, 55, 39, 63, 15, 47, 36, 32, 34, 38, 23]),
        (index: 40, adjacentSpaces: [32, 41, 48, 49, 33], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.f1a6, Chess.Diagonal.f1h3], diagonalSpaces: [19, 58, 49, 33, 12, 5, 26, 40], knightSpaces: [57, 34, 50, 25], queenSpaces: [42, 16, 0, 19, 58, 33, 40, 5, 44, 8, 49, 45, 12, 47, 43, 32, 48, 46, 41, 56, 26, 24], whiteKingSpaces: [16, 32, 41, 48, 49, 33], blackKingSpaces: [49, 23, 48, 33, 32, 41, 55], rookSpaces: [42, 16, 0, 40, 44, 8, 45, 47, 43, 32, 48, 46, 41, 56, 24]),
        (index: 41, adjacentSpaces: [50, 49, 33, 42, 48, 32, 40, 34], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.g1a7, Chess.Diagonal.e1h4], diagonalSpaces: [50, 27, 20, 13, 6, 59, 48, 32, 41, 34], knightSpaces: [58, 35, 51, 26, 48, 24], queenSpaces: [42, 50, 25, 33, 40, 59, 6, 44, 9, 49, 45, 57, 47, 17, 43, 13, 48, 1, 27, 32, 46, 41, 34, 20], whiteKingSpaces: [50, 16, 49, 33, 42, 48, 32, 40, 34], blackKingSpaces: [55, 50, 49, 33, 42, 48, 32, 23, 40, 34], rookSpaces: [42, 25, 33, 40, 44, 9, 49, 45, 57, 47, 17, 43, 1, 46, 41]),
        (index: 42, adjacentSpaces: [43, 50, 51, 49, 33, 35, 41, 34], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.h1a8, Chess.Diagonal.d1h5], diagonalSpaces: [14, 56, 51, 7, 24, 33, 42, 60, 49, 35, 28, 21], knightSpaces: [36, 27, 52, 25, 48, 59, 32, 57], queenSpaces: [33, 46, 2, 24, 7, 41, 58, 43, 26, 44, 45, 56, 28, 47, 18, 50, 10, 21, 34, 49, 40, 42, 35, 51, 60, 14], whiteKingSpaces: [43, 50, 51, 16, 49, 33, 48, 35, 41, 34], blackKingSpaces: [43, 50, 51, 49, 33, 23, 55, 35, 41, 34], rookSpaces: [42, 50, 58, 40, 18, 44, 45, 2, 47, 10, 43, 46, 41, 34, 26]),
        (index: 43, adjacentSpaces: [36, 50, 51, 52, 44, 42, 35, 34], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.c1h6, Chess.Diagonal.b8h2], diagonalSpaces: [36, 34, 50, 16, 29, 52, 61, 25, 15, 57, 43, 22], knightSpaces: [37, 58, 28, 33, 49, 53, 60, 26], queenSpaces: [46, 29, 36, 19, 41, 43, 52, 44, 45, 15, 16, 27, 61, 25, 47, 59, 50, 11, 3, 34, 22, 40, 42, 35, 51, 57], whiteKingSpaces: [36, 50, 51, 52, 16, 44, 42, 48, 35, 34], blackKingSpaces: [36, 50, 51, 52, 44, 23, 42, 55, 35, 34], rookSpaces: [42, 19, 11, 40, 59, 35, 44, 3, 45, 47, 43, 27, 46, 41, 51]),
        (index: 44, adjacentSpaces: [36, 51, 52, 37, 53, 45, 35, 43], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.b1h7, Chess.Diagonal.c8h3], diagonalSpaces: [30, 51, 62, 44, 37, 17, 53, 8, 23, 58, 26, 35], knightSpaces: [38, 27, 50, 29, 61, 54, 59, 34], queenSpaces: [35, 46, 36, 30, 62, 41, 58, 43, 52, 26, 12, 44, 45, 28, 53, 20, 47, 40, 17, 23, 42, 8, 60, 4, 37, 51], whiteKingSpaces: [36, 51, 52, 16, 37, 53, 45, 48, 35, 43], blackKingSpaces: [36, 51, 52, 37, 53, 45, 23, 55, 35, 43], rookSpaces: [42, 40, 44, 52, 28, 45, 12, 60, 47, 36, 43, 4, 46, 41, 20]),
        (index: 45, adjacentSpaces: [36, 38, 52, 37, 44, 46, 53, 54], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.d8h4, Chess.Diagonal.a1h8], diagonalSpaces: [36, 0, 18, 27, 9, 31, 38, 52, 45, 54, 59, 63], knightSpaces: [61, 30, 51, 62, 28, 55, 39, 35], queenSpaces: [46, 54, 29, 36, 41, 43, 52, 31, 44, 45, 9, 27, 53, 61, 47, 59, 18, 21, 40, 13, 5, 0, 38, 63, 42, 37], whiteKingSpaces: [36, 38, 52, 16, 37, 44, 46, 53, 54, 48], blackKingSpaces: [36, 38, 52, 37, 44, 46, 53, 54, 23, 55], rookSpaces: [42, 61, 5, 40, 37, 44, 53, 45, 21, 47, 43, 13, 46, 41, 29]),
        (index: 46, adjacentSpaces: [38, 37, 47, 45, 53, 54, 39, 55], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.e8h5], diagonalSpaces: [10, 19, 37, 46, 53, 60, 55, 39, 28, 1], knightSpaces: [36, 61, 29, 52, 63, 31], queenSpaces: [42, 19, 40, 55, 6, 44, 37, 22, 30, 45, 54, 62, 14, 47, 53, 10, 43, 60, 39, 28, 1, 46, 38, 41], whiteKingSpaces: [38, 16, 37, 47, 45, 53, 54, 39, 55, 48], blackKingSpaces: [38, 37, 47, 45, 53, 54, 39, 55, 23], rookSpaces: [42, 40, 6, 44, 22, 30, 45, 54, 62, 14, 47, 43, 46, 38, 41]),
        (index: 47, adjacentSpaces: [46, 39, 55, 38, 54], file: File.f, fileSpaces: [44, 46, 45, 42, 47, 41, 40, 43], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.f8a3, Chess.Diagonal.f8h6], diagonalSpaces: [38, 11, 61, 29, 20, 47, 54, 2], knightSpaces: [62, 30, 37, 53], queenSpaces: [42, 7, 61, 20, 11, 31, 40, 55, 44, 39, 63, 45, 54, 2, 15, 47, 43, 46, 41, 23, 38, 29], whiteKingSpaces: [38, 16, 46, 48, 55, 39, 54], blackKingSpaces: [46, 39, 55, 38, 23, 54], rookSpaces: [42, 7, 31, 40, 55, 44, 39, 63, 45, 15, 47, 43, 46, 41, 23]),
        (index: 48, adjacentSpaces: [40, 57, 56, 41, 49], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.g1a7, Chess.Diagonal.g1h2], diagonalSpaces: [27, 20, 13, 6, 48, 57, 41, 34], knightSpaces: [42, 58, 33], queenSpaces: [20, 16, 0, 50, 40, 55, 6, 8, 52, 49, 53, 54, 57, 32, 13, 48, 27, 34, 41, 56, 51, 24], whiteKingSpaces: [56, 16, 49, 48, 57, 41, 40], blackKingSpaces: [56, 49, 23, 55, 57, 41, 40], rookSpaces: [16, 0, 50, 40, 55, 8, 52, 49, 53, 54, 32, 48, 56, 51, 24]),
        (index: 49, adjacentSpaces: [56, 50, 58, 42, 48, 57, 41, 40], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.h1a8, Chess.Diagonal.f1h3], diagonalSpaces: [14, 56, 58, 49, 28, 42, 7, 35, 40, 21], knightSpaces: [34, 59, 43, 32], queenSpaces: [42, 7, 50, 25, 58, 33, 35, 55, 40, 28, 52, 9, 49, 53, 54, 57, 14, 21, 17, 48, 1, 41, 56, 51], whiteKingSpaces: [56, 50, 16, 58, 42, 48, 57, 41, 40], blackKingSpaces: [56, 50, 58, 23, 42, 48, 57, 41, 40, 55], rookSpaces: [50, 25, 33, 55, 52, 9, 49, 53, 54, 57, 17, 48, 1, 41, 51]),
        (index: 50, adjacentSpaces: [51, 58, 49, 42, 59, 57, 41, 43], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.b8h2, Chess.Diagonal.e1h4], diagonalSpaces: [36, 41, 50, 29, 15, 59, 57, 32, 43, 22], knightSpaces: [40, 44, 60, 56, 35, 33], queenSpaces: [42, 50, 58, 59, 55, 18, 52, 49, 53, 54, 57, 22, 2, 15, 10, 36, 32, 48, 43, 34, 41, 29, 51, 26], whiteKingSpaces: [51, 16, 58, 49, 42, 59, 57, 41, 43, 48], blackKingSpaces: [51, 58, 49, 23, 42, 59, 57, 41, 43, 55], rookSpaces: [42, 50, 58, 55, 18, 52, 49, 53, 54, 2, 10, 48, 34, 51, 26]),
        (index: 51, adjacentSpaces: [50, 52, 44, 58, 60, 42, 59, 43], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.d1h5, Chess.Diagonal.c8h3], diagonalSpaces: [30, 51, 37, 44, 58, 23, 24, 33, 42, 60], knightSpaces: [57, 45, 34, 61, 41, 36], queenSpaces: [42, 19, 50, 58, 11, 59, 55, 35, 37, 52, 3, 49, 53, 54, 30, 44, 33, 60, 43, 48, 27, 23, 51, 24], whiteKingSpaces: [50, 52, 16, 44, 58, 60, 42, 59, 48, 43], blackKingSpaces: [50, 52, 44, 58, 60, 23, 42, 59, 55, 43], rookSpaces: [19, 50, 11, 59, 55, 35, 52, 3, 49, 53, 54, 43, 48, 27, 51]),
        (index: 52, adjacentSpaces: [61, 51, 44, 53, 45, 59, 60, 43], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.c1h6, Chess.Diagonal.d8h4], diagonalSpaces: [61, 38, 16, 52, 31, 25, 45, 59, 43, 34], knightSpaces: [62, 42, 46, 35, 37, 58], queenSpaces: [16, 50, 61, 25, 31, 55, 59, 44, 52, 49, 53, 54, 28, 12, 60, 45, 36, 43, 48, 4, 34, 38, 51, 20], whiteKingSpaces: [61, 51, 16, 44, 53, 45, 59, 60, 48, 43], blackKingSpaces: [61, 51, 44, 53, 45, 59, 60, 23, 55, 43], rookSpaces: [50, 55, 44, 52, 49, 53, 54, 28, 12, 60, 36, 48, 4, 51, 20]),
        (index: 53, adjacentSpaces: [61, 52, 62, 44, 46, 45, 54, 60], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.b1h7, Chess.Diagonal.e8h5], diagonalSpaces: [62, 44, 17, 53, 8, 46, 39, 26, 35, 60], knightSpaces: [59, 63, 43, 36, 47, 38], queenSpaces: [61, 50, 5, 35, 55, 37, 44, 52, 49, 53, 54, 45, 62, 21, 8, 39, 17, 60, 13, 48, 46, 29, 51, 26], whiteKingSpaces: [61, 52, 16, 62, 44, 46, 45, 54, 60, 48], blackKingSpaces: [61, 52, 62, 44, 46, 45, 54, 60, 23, 55], rookSpaces: [61, 50, 5, 55, 37, 52, 49, 53, 54, 45, 21, 13, 48, 29, 51]),
        (index: 54, adjacentSpaces: [61, 62, 46, 45, 47, 53, 55, 63], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.f8h6, Chess.Diagonal.a1h8], diagonalSpaces: [36, 0, 18, 27, 9, 61, 47, 45, 54, 63], knightSpaces: [44, 60, 39, 37], queenSpaces: [50, 0, 61, 55, 6, 18, 52, 30, 49, 53, 54, 62, 22, 14, 9, 47, 36, 45, 48, 27, 63, 46, 38, 51], whiteKingSpaces: [61, 16, 62, 46, 45, 47, 53, 55, 48, 63], blackKingSpaces: [61, 62, 46, 45, 47, 53, 55, 23, 63], rookSpaces: [50, 55, 6, 52, 30, 49, 53, 54, 62, 22, 14, 48, 46, 38, 51]),
        (index: 55, adjacentSpaces: [46, 62, 63, 47, 54], file: File.g, fileSpaces: [50, 51, 52, 49, 53, 48, 54, 55], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.g8a2, Chess.Diagonal.g8h7], diagonalSpaces: [10, 19, 37, 62, 46, 28, 55, 1], knightSpaces: [38, 61, 45], queenSpaces: [7, 50, 19, 31, 55, 63, 37, 52, 49, 53, 54, 39, 62, 28, 15, 47, 10, 48, 1, 46, 23, 51], whiteKingSpaces: [16, 62, 46, 47, 48, 54, 63], blackKingSpaces: [62, 46, 23, 47, 54, 55, 63], rookSpaces: [7, 50, 31, 55, 63, 52, 49, 53, 54, 39, 15, 47, 48, 23, 51]),
        (index: 56, adjacentSpaces: [57, 48, 49], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._1, rankSpaces: [0, 56, 16, 24, 8, 48, 32, 40], diagonals: [Chess.Diagonal.h1a8], diagonalSpaces: [14, 56, 49, 28, 42, 7, 35, 21], knightSpaces: [41, 50], queenSpaces: [42, 16, 61, 0, 7, 58, 35, 59, 40, 63, 8, 49, 57, 60, 28, 62, 14, 21, 32, 48, 56, 24], whiteKingSpaces: [57, 49, 48, 16], blackKingSpaces: [57, 55, 49, 48, 23], rookSpaces: [16, 61, 0, 58, 59, 40, 63, 8, 57, 60, 62, 32, 48, 56, 24]),
        (index: 57, adjacentSpaces: [50, 56, 49, 48, 58], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._2, rankSpaces: [9, 17, 25, 33, 49, 1, 41, 57], diagonals: [Chess.Diagonal.b8h2, Chess.Diagonal.g1h2], diagonalSpaces: [36, 50, 29, 15, 48, 57, 43, 22], knightSpaces: [42, 40, 51], queenSpaces: [61, 25, 50, 58, 33, 59, 63, 9, 57, 60, 49, 22, 62, 15, 17, 36, 43, 48, 1, 41, 56, 29], whiteKingSpaces: [50, 56, 49, 48, 58, 16], blackKingSpaces: [56, 50, 58, 49, 23, 48, 55], rookSpaces: [61, 25, 58, 33, 59, 63, 9, 57, 60, 49, 62, 17, 1, 41, 56]),
        (index: 58, adjacentSpaces: [57, 59, 50, 49, 51], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._3, rankSpaces: [10, 18, 50, 58, 42, 2, 26, 34], diagonals: [Chess.Diagonal.f1h3, Chess.Diagonal.c8h3], diagonalSpaces: [30, 51, 37, 44, 58, 23, 49, 40], knightSpaces: [43, 52, 48, 41], queenSpaces: [42, 23, 61, 50, 58, 59, 40, 18, 63, 37, 57, 60, 30, 44, 62, 2, 49, 10, 34, 56, 26, 51], whiteKingSpaces: [50, 51, 16, 49, 59, 48, 57], blackKingSpaces: [50, 51, 49, 23, 59, 55, 57], rookSpaces: [42, 61, 50, 58, 59, 18, 63, 57, 60, 62, 2, 10, 34, 56, 26]),
        (index: 59, adjacentSpaces: [60, 50, 51, 52, 58], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._4, rankSpaces: [3, 11, 27, 51, 19, 59, 35, 43], diagonals: [Chess.Diagonal.d8h4, Chess.Diagonal.e1h4], diagonalSpaces: [38, 50, 52, 31, 45, 59, 32, 41], knightSpaces: [44, 42, 49, 53], queenSpaces: [19, 61, 50, 58, 11, 59, 35, 63, 31, 52, 3, 60, 57, 45, 62, 43, 32, 27, 38, 56, 51, 41], whiteKingSpaces: [50, 51, 52, 16, 58, 60, 48], blackKingSpaces: [50, 51, 52, 58, 60, 23, 55], rookSpaces: [19, 61, 58, 11, 59, 35, 63, 3, 60, 57, 62, 43, 27, 56, 51]),
        (index: 60, adjacentSpaces: [59, 61, 51, 52, 53], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._5, rankSpaces: [36, 52, 20, 44, 28, 4, 12, 60], diagonals: [Chess.Diagonal.e8h5, Chess.Diagonal.d1h5], diagonalSpaces: [51, 24, 33, 42, 60, 39, 46, 53], knightSpaces: [45, 50, 43, 54], queenSpaces: [24, 42, 61, 58, 33, 59, 63, 44, 52, 57, 60, 28, 12, 62, 39, 53, 36, 4, 46, 56, 51, 20], whiteKingSpaces: [61, 51, 52, 16, 53, 59, 48], blackKingSpaces: [61, 51, 52, 53, 23, 59, 55], rookSpaces: [61, 58, 59, 63, 44, 52, 57, 60, 28, 12, 62, 36, 4, 56, 20]),
        (index: 61, adjacentSpaces: [62, 60, 52, 53, 54], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._6, rankSpaces: [61, 29, 13, 37, 5, 45, 53, 21], diagonals: [Chess.Diagonal.c1h6, Chess.Diagonal.f8h6], diagonalSpaces: [61, 16, 52, 47, 25, 54, 43, 34], knightSpaces: [44, 46, 51, 55], queenSpaces: [16, 61, 25, 58, 5, 59, 37, 63, 53, 57, 60, 45, 52, 62, 21, 47, 54, 43, 13, 34, 56, 29], whiteKingSpaces: [52, 16, 62, 60, 53, 48, 54], blackKingSpaces: [52, 62, 60, 53, 23, 54, 55], rookSpaces: [61, 58, 5, 59, 37, 63, 53, 57, 60, 45, 62, 21, 13, 56, 29]),
        (index: 62, adjacentSpaces: [63, 61, 55, 53, 54], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._7, rankSpaces: [22, 38, 30, 62, 6, 46, 54, 14], diagonals: [Chess.Diagonal.g8h7, Chess.Diagonal.b1h7], diagonalSpaces: [62, 44, 17, 53, 8, 55, 26, 35], knightSpaces: [47, 52, 45], queenSpaces: [61, 58, 35, 59, 55, 6, 63, 44, 22, 30, 60, 57, 62, 54, 14, 53, 17, 8, 46, 38, 56, 26], whiteKingSpaces: [61, 16, 53, 48, 55, 54, 63], blackKingSpaces: [63, 61, 55, 53, 23, 54], rookSpaces: [61, 58, 59, 6, 63, 22, 30, 60, 57, 62, 54, 14, 46, 38, 56]),
        (index: 63, adjacentSpaces: [54, 55, 62], file: File.h, fileSpaces: [56, 61, 62, 58, 60, 59, 57, 63], rank: Rank._8, rankSpaces: [31, 7, 23, 15, 47, 39, 55, 63], diagonals: [Chess.Diagonal.a1h8], diagonalSpaces: [36, 0, 18, 27, 9, 45, 54, 63], knightSpaces: [53, 46], queenSpaces: [7, 61, 0, 58, 31, 59, 63, 55, 39, 57, 60, 18, 9, 62, 45, 15, 47, 54, 36, 27, 56, 23], whiteKingSpaces: [62, 55, 48, 16, 54], blackKingSpaces: [62, 55, 23, 54], rookSpaces: [7, 61, 58, 31, 59, 63, 55, 39, 57, 60, 62, 15, 47, 56, 23])
    ]
    
}

//struct Squares {
//
//    subscript(space: Space) -> Square {
//        get {
//            return model[space]
//        }
//    }
//
//    let model = EnumMap<Space, Square> { type in
//        switch type {
//        case .a1: return (index: 0,
//                          adjacentSpaces: [.a2,.b1,.b2],
//                          file: .a,
//                          fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                          rank: ._1,
//                          rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                          diagonals: [.a1h8],
//                          diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8],
//                          knightSpaces: [.b3,.c2])
//        case .a2: return (index: 1,
//                         adjacentSpaces: [.a1,.a3,.b1,.b2,.b3],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.g8a2, .b1a2],
//                         diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.b1],
//                         knightSpaces: [.b4,.c1,.c3])
//        case .a3: return (index: 2,
//                          adjacentSpaces: [.a2,.a4,.b2,.b3,.b4],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.f8a3, .c1a3],
//                         diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.c1,.b2],
//                         knightSpaces: [.b5,.b1,.c4,.c2])
//        case .a4: return (index: 3,
//                          adjacentSpaces: [.a3,.a5,.b3,.b4,.b5],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.e8a4, .d1a4],
//                         diagonalSpaces: [.d1,.c2,.b3,.a4,.e8,.d7,.c6,.b5],
//                         knightSpaces: [.b6,.b2,.c5,.c3])
//        case .a5: return (index: 4,
//                          adjacentSpaces: [.a4,.a6,.b4,.b5,.b6],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.d8a5, .e1a5],
//                         diagonalSpaces: [.e1,.d2,.c3,.b4,.a5,.d8,.c7,.b6],
//                         knightSpaces: [.b7,.b3,.c6,.c4])
//        case .a6: return (index: 5,
//                          adjacentSpaces: [.a5,.a7,.b5,.b6,.b7],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.c8a6, .f1a6],
//                         diagonalSpaces: [.c8,.b7,.a6,.f1,.e2,.d3,.c4,.b5],
//                         knightSpaces: [.b8,.b4,.c7,.c5])
//        case .a7: return (index: 6,
//                          adjacentSpaces: [.a6,.a8,.b6,.b7,.b8],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.b8a7, .g1a7],
//                         diagonalSpaces: [.g1,.f2,.e3,.d4,.c5,.b6,.a7,.b8],
//                         knightSpaces: [.b5,.c8,.c6])
//        case .a8: return (index: 7,
//                          adjacentSpaces: [.a7,.b7,.b8],
//                         file: .a,
//                         fileSpaces: [.a1,.a2,.a3,.a4,.a5,.a6,.a7,.a8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.h1a8],
//                         diagonalSpaces: [.h1,.g2,.f3,.e4,.d5,.c6,.b7,.a8],
//                         knightSpaces: [.b6,.c7])
//        case .b1: return (index: 8,
//                          adjacentSpaces: [.a1,.a2,.b2,.c1,.c2],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.b1a2, .b1h7],
//                         diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.a2],
//                         knightSpaces: [.a3,.c3,.d2])
//        case .b2: return (index: 9,
//                          adjacentSpaces: [.a1,.a2,.a3,.b1,.b3,.c1,.c2,.c3],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.a1h8, .c1a3],
//                         diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.c1,.a3],
//                         knightSpaces: [.a4,.c4,.d1,.d3])
//        case .b3: return (index: 10,
//                          adjacentSpaces: [.a2,.a3,.a4,.b2,.b4,.c2,.c3,.c4],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.g8a2, .d1a4],
//                         diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.d1,.c2,.a4],
//                         knightSpaces: [.a1,.a5,.c1,.c5,.d2,.d4])
//        case .b4: return (index: 11,
//                          adjacentSpaces: [.a3,.a4,.a5,.b3,.b5,.c3,.c4,.c5],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.f8a3, .e1a5],
//                         diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.e1,.d2,.c3,.a5],
//                         knightSpaces: [.a2,.a6,.c2,.c6,.d3,.d5])
//        case .b5: return (index: 12,
//                          adjacentSpaces: [.a4,.a5,.a6,.b4,.b6,.c4,.c5,.c6],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.e8a4, .f1a6],
//                         diagonalSpaces: [.e8,.d7,.c6,.b5,.a4,.f1,.e2,.d3,.c4,.a6],
//                         knightSpaces: [.a3,.a7,.c3,.c7,.d4,.d6])
//        case .b6: return (index: 13,
//                          adjacentSpaces: [.a5,.a6,.a7,.b5,.b7,.c5,.c6,.c7],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.d8a5, .g1a7],
//                         diagonalSpaces: [.d8,.c7,.b6,.a5,.g1,.f2,.e3,.d4,.c5,.a7],
//                         knightSpaces: [.a4,.a8,.c4,.c8,.d5,.d7])
//        case .b7: return (index: 14,
//                          adjacentSpaces: [.a6,.a7,.a8,.b6,.b8,.c6,.c7,.c8],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.c8a6, .h1a8],
//                         diagonalSpaces: [.c8,.b7,.a6,.h1,.g2,.f3,.e4,.d5,.c6,.a8],
//                         knightSpaces: [.a5,.c5,.d6,.d8])
//        case .b8: return (index: 15,
//                          adjacentSpaces: [.a7,.a8,.b7,.c7,.c8],
//                         file: .b,
//                         fileSpaces: [.b1,.b2,.b3,.b4,.b5,.b6,.b7,.b8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.b8a7, .b8h2],
//                         diagonalSpaces: [.b8,.a7,.c7,.d6,.e5,.f4,.g3,.h2],
//                         knightSpaces: [.a6,.c6,.d7])
//        case .c1: return (index: 16,
//                          adjacentSpaces: [.b1,.b2,.c2,.d1,.d2],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.c1a3, .c1h6],
//                         diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.b2,.a3],
//                         knightSpaces: [.a2,.b3,.d3,.e2])
//        case .c2: return (index: 17,
//                          adjacentSpaces: [.b1,.b2,.b3,.c1,.c3,.d1,.d2,.d3],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.d1a4, .b1h7],
//                         diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.d1,.b3,.a4],
//                         knightSpaces: [.a1,.a3,.b4,.d4,.e1,.e3])
//        case .c3: return (index: 18,
//                          adjacentSpaces: [.b2,.b3,.b4,.c2,.c4,.d2,.d3,.d4],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.e1a5, .a1h8],
//                         diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.e1,.d2,.b4,.a5],
//                         knightSpaces: [.a2,.a4,.b1,.b5,.d1,.d5,.e2,.e4])
//        case .c4: return (index: 19,
//                          adjacentSpaces: [.b3,.b4,.b5,.c3,.c5,.d3,.d4,.d5],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.g8a2, .f1a6],
//                         diagonalSpaces: [.f1,.e2,.d3,.c4,.b5,.a6,.g8,.f7,.e6,.d5,.b3,.a2],
//                         knightSpaces: [.a3,.a5,.b2,.b6,.d2,.d6,.e3,.e5])
//        case .c5: return (index: 20,
//                          adjacentSpaces: [.b4,.b5,.b6,.c4,.c6,.d4,.d5,.d6],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.f8a3, .g1a7],
//                         diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.g1,.f2,.e3,.d4,.b6,.a7],
//                         knightSpaces: [.a4,.a6,.b3,.b7,.d3,.d7,.e4,.e6])
//        case .c6: return (index: 21,
//                          adjacentSpaces: [.b5,.b6,.b7,.c5,.c7,.d5,.d6,.d7],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.e8a4, .h1a8],
//                         diagonalSpaces: [.e8,.d7,.c6,.b5,.a4,.h1,.g2,.f3,.e4,.d5,.b7,.a8],
//                         knightSpaces: [.a5,.a7,.b4,.b8,.d4,.d8,.e6,.e7])
//        case .c7: return (index: 22,
//                          adjacentSpaces: [.b6,.b7,.b8,.c6,.c8,.d6,.d7,.d8],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.d8a5, .b8h2],
//                         diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.d8,.b6,.a5],
//                         knightSpaces: [.a6,.a8,.b5,.d5,.e6,.e8])
//        case .c8: return (index: 23,
//                          adjacentSpaces: [.b7,.b8,.c7,.d7,.d8],
//                         file: .c,
//                         fileSpaces: [.c1,.c2,.c3,.c4,.c5,.c6,.c7,.c8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.c8a6, .c8h3],
//                         diagonalSpaces: [.c8,.b7,.a6,.d7,.e6,.f5,.g4,.h3],
//                         knightSpaces: [.a7,.b6,.d6,.e7])
//        case .d1: return (index: 24,
//                          adjacentSpaces: [.c1,.c2,.d2,.e1,.e2],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.d1a4, .d1h5],
//                         diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.c2,.b3,.a4],
//                         knightSpaces: [.b2,.c3,.e3,.f2])
//        case .d2: return (index: 25,
//                          adjacentSpaces: [.c1,.c2,.c3,.d1,.d3,.e1,.e2,.e3],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.c1h6, .e1a5],
//                         diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.e1,.c3,.b4,.a5],
//                         knightSpaces: [.b1,.b3,.c4,.e4,.f1,.f3])
//        case .d3: return (index: 26,
//                          adjacentSpaces: [.c2,.c3,.c4,.d2,.d4,.e2,.e3,.e4],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.b1h7, .f1a6],
//                         diagonalSpaces: [.f1,.e2,.d3,.c4,.b5,.a6,.b1,.c2,.e4,.f5,.g6,.h7],
//                         knightSpaces: [.b2,.b4,.c1,.c5,.e1,.e5,.f2,.f4])
//        case .d4: return (index: 27,
//                          adjacentSpaces: [.c3,.c4,.c5,.d3,.d5,.e3,.e4,.e5],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.a1h8, .g1a7],
//                         diagonalSpaces: [.g1,.f2,.e3,.d4,.c5,.b6,.a7,.a1,.b2,.c3,.e5,.f6,.g7,.h8],
//                         knightSpaces: [.b3,.b5,.c2,.c6,.e2,.e6,.f3,.f5])
//        case .d5: return (index: 28,
//                          adjacentSpaces: [.c4,.c5,.c6,.d4,.d6,.e4,.e5,.e6],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.g8a2, .h1a8],
//                         diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.h1,.g2,.f3,.e4,.c6,.b7,.a8],
//                         knightSpaces: [.b4,.b6,.c3,.c7,.e3,.e7,.f4,.f6])
//        case .d6: return (index: 29,
//                          adjacentSpaces: [.c5,.c6,.c7,.d5,.d7,.e5,.e6,.e7],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.f8a3, .b8h2],
//                         diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.f8,.e7,.c5,.b4,.a3],
//                         knightSpaces: [.b5,.b7,.c4,.c8,.e4,.e8,.f6,.f7])
//        case .d7: return (index: 30,
//                          adjacentSpaces: [.c6,.c7,.c8,.d6,.d8,.e6,.e7,.e8],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.e8a4, .c8h3],
//                         diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.e8,.c6,.b5,.a4],
//                         knightSpaces: [.b6,.b8,.c5,.e5,.f6,.f8])
//        case .d8: return (index: 31,
//                          adjacentSpaces: [.c7,.c8,.d7,.e7,.e8],
//                         file: .d,
//                         fileSpaces: [.d1,.d2,.d3,.d4,.d5,.d6,.d7,.d8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.d8a5, .d8h4],
//                         diagonalSpaces: [.d8,.c7,.b6,.a5,.e7,.f6,.g5,.h4],
//                         knightSpaces: [.b7,.c6,.e6,.f7])
//        case .e1: return (index: 32,
//                          adjacentSpaces: [.d1,.d2,.e2,.f1,.f2],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.e1a5, .e1h4],
//                         diagonalSpaces: [.e1,.f2,.g3,.h4,.d2,.c3,.b4,.a5],
//                         knightSpaces: [.c2,.d3,.f3,.g2])
//        case .e2: return (index: 33,
//                          adjacentSpaces: [.d1,.d2,.d3,.e1,.e3,.f1,.f2,.f3],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.d1h5, .f1a6],
//                         diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.f1,.d3,.c4,.b5,.a6],
//                         knightSpaces: [.c1,.c3,.d4,.f4,.g1,.g3])
//        case .e3: return (index: 34,
//                          adjacentSpaces: [.d2,.d3,.d4,.e2,.e4,.f2,.f3,.f4],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.c1h6, .g1a7],
//                         diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.g1,.f2,.d4,.c5,.b6,.a7],
//                         knightSpaces: [.c2,.c4,.d1,.d5,.f1,.f5,.g2,.g4])
//        case .e4: return (index: 35,
//                          adjacentSpaces: [.d3,.d4,.d5,.e3,.e5,.f3,.f4,.f5],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.b1h7, .h1a8],
//                         diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.h1,.g2,.f3,.d5,.c6,.b7,.a8],
//                         knightSpaces: [.c3,.c5,.d2,.d6,.f2,.f6,.g3,.g5])
//        case .e5: return (index: 36,
//                          adjacentSpaces: [.d4,.d5,.d6,.e4,.e6,.f4,.f5,.f6],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.a1h8, .b8h2],
//                         diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.b8,.c7,.d6,.f4,.g3,.h2],
//                         knightSpaces: [.c4,.c6,.d3,.d7,.f3,.f7,.g4,.g6])
//        case .e6: return (index: 37,
//                          adjacentSpaces: [.d5,.d6,.d7,.e5,.e7,.f5,.f6,.f7],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.g8a2, .c8h3],
//                         diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.g8,.f7,.d5,.c4,.b3,.a2],
//                         knightSpaces: [.c5,.c7,.d4,.d8,.f4,.f8,.g6,.g7])
//        case .e7: return (index: 38,
//                          adjacentSpaces: [.d6,.d7,.d8,.e6,.e8,.f6,.f7,.f8],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.f8a3, .d8h4],
//                         diagonalSpaces: [.d8,.e7,.f6,.g5,.h4,.f8,.d6,.c5,.b4,.a3],
//                         knightSpaces: [.c6,.c8,.d5,.f5,.g6,.g8])
//        case .e8: return (index: 39,
//                          adjacentSpaces: [.d7,.d8,.e7,.f7,.f8],
//                         file: .e,
//                         fileSpaces: [.e1,.e2,.e3,.e4,.e5,.e6,.e7,.e8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.e8a4, .e8h5],
//                         diagonalSpaces: [.e8,.d7,.c6,.b5,.a4,.f7,.g6,.h5],
//                         knightSpaces: [.c7,.d6,.f6,.g7])
//        case .f1: return (index: 40,
//                          adjacentSpaces: [.e1,.e2,.f2,.g1,.g2],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.f1a6, .f1h3],
//                         diagonalSpaces: [.f1,.g2,.h3,.e2,.d3,.c4,.b5,.a6],
//                         knightSpaces: [.d2,.e3,.g3,.h2])
//        case .f2: return (index: 41,
//                          adjacentSpaces: [.e1,.e2,.e3,.f1,.f3,.g1,.g2,.g3],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.e1h4, .g1a7],
//                         diagonalSpaces: [.e1,.f2,.g3,.h4,.g1,.e3,.d4,.c5,.b6,.a7],
//                         knightSpaces: [.d1,.d3,.e4,.g4,.g1,.h3])
//        case .f3: return (index: 42,
//                          adjacentSpaces: [.e2,.e3,.e4,.f2,.f4,.g2,.g3,.g4],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.d1h5, .h1a8],
//                         diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.h1,.g2,.e4,.d5,.c6,.b7,.a8],
//                         knightSpaces: [.d2,.d4,.e1,.e5,.g1,.g5,.h2,.h4])
//        case .f4: return (index: 43,
//                          adjacentSpaces: [.e3,.e4,.e5,.f3,.f5,.g3,.g4,.g5],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.c1h6, .b8h2],
//                         diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.c1,.d2,.e3,.g5,.h6],
//                         knightSpaces: [.d3,.d5,.e2,.e6,.g2,.g6,.h3,.h5])
//        case .f5: return (index: 44,
//                          adjacentSpaces: [.e4,.e5,.e6,.f4,.f6,.g4,.g5,.g6],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.b1h7, .c8h3],
//                         diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.c8,.d7,.e6,.g4,.h3],
//                         knightSpaces: [.d4,.d6,.e3,.e7,.g3,.g7,.h4,.h6])
//        case .f6: return (index: 45,
//                          adjacentSpaces: [.e5,.e6,.e7,.f5,.f7,.g5,.g6,.g7],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.a1h8, .d8h4],
//                         diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.d8,.e7,.g5,.h4],
//                         knightSpaces: [.d5,.d7,.e4,.e8,.g4,.g8,.h6,.h7])
//        case .f7: return (index: 46,
//                          adjacentSpaces: [.e6,.e7,.e8,.f6,.f8,.g6,.g7,.g8],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.g8a2, .e8h5],
//                         diagonalSpaces: [.e8,.f7,.g6,.h5,.g8,.e6,.d5,.c4,.b3,.a2],
//                         knightSpaces: [.d6,.d8,.e5,.g5,.h6,.h8])
//        case .f8: return (index: 47,
//                          adjacentSpaces: [.e7,.e8,.f7,.g7,.g8],
//                         file: .f,
//                         fileSpaces: [.f1,.f2,.f3,.f4,.f5,.f6,.f7,.f8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.f8a3, .f8h6],
//                         diagonalSpaces: [.f8,.e7,.d6,.c5,.b4,.a3,.g7,.h6],
//                         knightSpaces: [.d7,.e6,.g6,.h7])
//        case .g1: return (index: 48,
//                          adjacentSpaces: [.f1,.f2,.g2,.h1,.h2],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.g1a7, .g1h2],
//                         diagonalSpaces: [.g1,.h2,.f2,.e3,.d4,.c5,.b6,.a7],
//                         knightSpaces: [.h3,.f3,.e2])
//        case .g2: return (index: 49,
//                          adjacentSpaces: [.f1,.f2,.f3,.g1,.g3,.h1,.h2,.h3],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.f1h3, .h1a8],
//                         diagonalSpaces: [.f1,.g2,.h3,.h1,.f3,.e4,.d5,.c6,.b7,.a8],
//                         knightSpaces: [.h4,.f4,.e1,.e3])
//        case .g3: return (index: 50,
//                          adjacentSpaces: [.f2,.f3,.f4,.g2,.g4,.h2,.h3,.h4],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.e1h4, .b8h2],
//                         diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.e1,.f2,.h4],
//                         knightSpaces: [.h1,.h5,.f1,.f5,.e2,.e4])
//        case .g4: return (index: 51,
//                          adjacentSpaces: [.f3,.f4,.f5,.g3,.g5,.h3,.h4,.h5],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.d1h5, .c8h3],
//                         diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.d1,.e2,.f3,.h5],
//                         knightSpaces: [.h2,.h6,.f2,.f6,.e3,.e5])
//        case .g5: return (index: 52,
//                          adjacentSpaces: [.f4,.f5,.f6,.g4,.g6,.h4,.h5,.h6],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.c1h6, .d8h4],
//                         diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.d8,.e7,.f6,.h4],
//                         knightSpaces: [.h3,.h7,.f3,.f7,.e4,.e6])
//        case .g6: return (index: 53,
//                          adjacentSpaces: [.f5,.f6,.f7,.g5,.g7,.h5,.h6,.h7],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.b1h7, .e8h5],
//                         diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.e8,.f7,.h5],
//                         knightSpaces: [.h4,.h8,.f4,.f8,.e5,.e7])
//        case .g7: return (index: 54,
//                          adjacentSpaces: [.f6,.f7,.f8,.g6,.g8,.h6,.h7,.h8],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.a1h8, .f8h6],
//                         diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8,.f8,.h6],
//                         knightSpaces: [.h5,.f5,.e6,.e8])
//        case .g8: return (index: 55,
//                          adjacentSpaces: [.f7,.f8,.g7,.h7,.h8],
//                         file: .g,
//                         fileSpaces: [.g1,.g2,.g3,.g4,.g5,.g6,.g7,.g8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.g8a2, .g8h7],
//                         diagonalSpaces: [.g8,.f7,.e6,.d5,.c4,.b3,.a2,.h7],
//                         knightSpaces: [.h6,.f6,.e7])
//        case .h1: return (index: 56,
//                          adjacentSpaces: [.h2,.g1,.g2],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._1,
//                         rankSpaces: [.a1,.b1,.c1,.d1,.e1,.f1,.g1,.h1],
//                         diagonals: [.h1a8],
//                         diagonalSpaces: [.h1,.g2,.f3,.e4,.d5,.c6,.b7,.a8],
//                         knightSpaces: [.g3,.f2])
//        case .h2: return (index: 57,
//                          adjacentSpaces: [.h1,.h3,.g1,.g2,.g3],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._2,
//                         rankSpaces: [.a2,.b2,.c2,.d2,.e2,.f2,.g2,.h2],
//                         diagonals: [.b8h2, .g1h2],
//                         diagonalSpaces: [.b8,.c7,.d6,.e5,.f4,.g3,.h2,.g1],
//                         knightSpaces: [.g4,.f1,.f3])
//        case .h3: return (index: 58,
//                          adjacentSpaces: [.h2,.h4,.g2,.g3,.g4],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._3,
//                         rankSpaces: [.a3,.b3,.c3,.d3,.e3,.f3,.g3,.h3],
//                         diagonals: [.c8h3, .f1h3],
//                         diagonalSpaces: [.c8,.d7,.e6,.f5,.g4,.h3,.f1,.g2],
//                         knightSpaces: [.g5,.g1,.f4,.f2])
//        case .h4: return (index: 59,
//                          adjacentSpaces: [.h3,.h5,.g3,.g4,.g5],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._4,
//                         rankSpaces: [.a4,.b4,.c4,.d4,.e4,.f4,.g4,.h4],
//                         diagonals: [.d8h4, .e1h4],
//                         diagonalSpaces: [.d8,.e7,.f6,.g5,.h4,.e1,.f2,.g3],
//                         knightSpaces: [.g6,.g2,.f5,.f3])
//        case .h5: return (index: 60,
//                          adjacentSpaces: [.h4,.h6,.g4,.g5,.g6],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._5,
//                         rankSpaces: [.a5,.b5,.c5,.d5,.e5,.f5,.g5,.h5],
//                         diagonals: [.e8h5, .d1h5],
//                         diagonalSpaces: [.d1,.e2,.f3,.g4,.h5,.e8,.f7,.g6],
//                         knightSpaces: [.g7,.g3,.f6,.f4])
//        case .h6: return (index: 61,
//                          adjacentSpaces: [.h5,.h7,.g5,.g6,.g7],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._6,
//                         rankSpaces: [.a6,.b6,.c6,.d6,.e6,.f6,.g6,.h6],
//                         diagonals: [.f8h6, .c1h6],
//                         diagonalSpaces: [.c1,.d2,.e3,.f4,.g5,.h6,.f8,.g7],
//                         knightSpaces: [.g8,.g4,.f7,.f5])
//        case .h7: return (index: 62,
//                          adjacentSpaces: [.h6,.h8,.g6,.g7,.g8],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._7,
//                         rankSpaces: [.a7,.b7,.c7,.d7,.e7,.f7,.g7,.h7],
//                         diagonals: [.g8h7, .b1h7],
//                         diagonalSpaces: [.b1,.c2,.d3,.e4,.f5,.g6,.h7,.g8],
//                         knightSpaces: [.g5,.f8,.f6])
//        case .h8: return (index: 63,
//                          adjacentSpaces: [.h7,.g7,.g8],
//                         file: .h,
//                         fileSpaces: [.h1,.h2,.h3,.h4,.h5,.h6,.h7,.h8],
//                         rank: ._8,
//                         rankSpaces: [.a8,.b8,.c8,.d8,.e8,.f8,.g8,.h8],
//                         diagonals: [.a1h8],
//                         diagonalSpaces: [.a1,.b2,.c3,.d4,.e5,.f6,.g7,.h8],
//                         knightSpaces: [.g6,.f7])
//        }
//    }
//
//}
